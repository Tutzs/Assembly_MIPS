.data
    msg: .asciiz "overflow"

.text
main:

li $v0, 5 # lendo se vai ser 1 ou 0
syscall
move $t0, $v0

li $v0, 5 # lendo primeiro numero
syscall
move $t1, $v0

li $v0, 5 # lendo segundo numero
syscall
move $t2, $v0

beq $t0, $zero, somaSem # se t0 == 0 fa√ßo soma sem sinal

addu $t4, $t1, $t2 
xor $t3, $t1, $t2 
slt $t3, $t3, $zero # t3 < 0
bne $t3, $zero, semOverflow

xor $t3, $t4, $t1
slt $t3, $t3, $zero
bne $t3, $zero, Overflow

j semOverflow

somaSem:
    addu $t4, $t1, $t2

    nor $t6, $t1, $zero
    sltu $t6, $t6, $t2
    bne $t6, $zero, Overflow

    move $a0, $t4
    li $v0, 1
    syscall

    li $v0, 11
    li $a0, 10
    syscall

    li $v0, 10 
    syscall

Overflow:
    la $a0, msg
    li $v0, 4
    syscall

    li $v0, 11
    li $a0, 10
    syscall
    
    li $v0, 10
    syscall

semOverflow:
    move $a0, $t4
    li $v0, 1
    syscall

    li $v0, 11
    li $a0, 10
    syscall

li $v0, 10
syscall
